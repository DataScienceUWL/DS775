{"backend_state":"init","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-62209296-5db4-4bd5-ab94-b655e5e18139.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":true,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{"height":"calc(100% - 180px)","left":"10px","top":"150px","width":"258.906px"},"toc_section_display":true,"toc_window_display":true},"varInspector":{"cols":{"lenName":16,"lenType":16,"lenVar":40},"kernels_config":{"python":{"delete_cmd_postfix":"","delete_cmd_prefix":"del ","library":"var_list.py","varRefreshCmd":"print(var_dic_list())"},"r":{"delete_cmd_postfix":") ","delete_cmd_prefix":"rm(","library":"var_list.r","varRefreshCmd":"cat(var_dic_list()) "}},"types_to_exclude":["module","function","builtin_function_or_method","instance","_Feature"],"window_display":false}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"4185c3","input":"","pos":27,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"807fa9","input":"def get_pork_cost(x):\n    '''\n    Parameters:\n    x - the amount of discount pork purchased\n    \n    Returns:\n    finalCost: An array of the optimized costs\n    fullPricePorkUsed: An array of the total full-price pork used\n    '''\n    np.random.seed(814) #retain this seed\n    #start your code here\n    \n    initialize storage arrays with numpy\n    for i in range(1000):\n        solve pyomo model to get min cost\n        cost[i] = model.cost()\n        ","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9cd6c0","input":"","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a31b83","input":"","pos":25,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a71e4d","input":"np.random.seed(777)  # Retain this seed\n\ninitialize storage array\nfor i in range(1000):\n    \n    stocks = 5000\n    bonds = 5000\n    for y in range(5):\n        generate random interest rates\n        stocks = stocks + ....\n        bonds = \n    storage_array[i] = stocks + bonds\n    \n    \n    ","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b46ab8","input":"","pos":15,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b82c88","input":"","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"57a5c8","input":"# retain this seed\nnp.random.seed(10)","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"15b2a5","input":"def find_profits(bid, ssize):\n    '''\n    Parameters:\n    bid - the amount RPI is bidding\n    ssize - the simulation size (1000 for your final solution - start smaller until you have a working function)\n    \n    Returns:\n    A numpy array of profits\n    '''\n    np.random.seed(88) #retain this seed\n    #add your code from here \n    \n    profits = np.zeros(ssize)\n    \n    for i in range(ssize):\n        best_comp_bid = np.min(np.random.uniform(0,100,4))\n        if bid < best_comp_bid: # RPI wins\n            profits[i] = ...\n        else:\n            profits[i] = ...\n            \n    mean_profit = np.mean(profits)\n    profit_05 = ...\n    profit_95 = ...\n    \n    return mean_profit, profit_05, profit_95\n\n","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"4f8c2d","input":"np.random.seed(88) #retain this seed\n\n","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"0381a0","input":"**New Information:**","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"2dcc55","input":"## **Question 12** (Manually Graded) <font color=\"magenta\">(2 points)</font>\n\nGenerate a trend chart for the eight bids considered in Question 11.\n\nSubmit both your code and your trend chart.\n\n**Hints:**\n* Graph horizontal bid amount and vertical mean profit\n* Remember to add trend lines\n","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"3228d8","input":"## **Question 3** - Textbook Problem 20.6-7 (Manually Graded) <font color=\"magenta\">(5 points)</font>\n\nNow that Jennifer is in middle school, her parents have decided they must start saving for her college education. They have \\$10,000 to invest right now. Furthermore, they plan to save another \\$4,000 yearly until Jennifer starts college five years later. They plan to split their investment evenly between stock and bond funds. The stock fund has had an average annual return of 8 percent with a standard deviation of 6 percent. The bond fund has had an average annual return of 4 percent with a standard deviation of 3 percent. (Assume a normal distribution for both.)\n\nAssume that the initial investment (\\$10,000) is made right now (at the beginning of year 1) and is split evenly between the two funds (i.e., \\$5,000 in each fund). The returns of each fund are allowed to accumulate (i.e., are reinvested) in the same fund and no redistribution will be done before Jennifer starts college. Furthermore, four additional investments of \\$4,000 will be made and split evenly between both funds (\\$2,000 each) at the end of each year plus another \\$4,000 of savings will be available at the end of year 5, just in time for Jennifer to begin college. Use a 1000-trial simulation to answer questions 4-7.\n\n**Hints:**\n* Generate new interest rates randomly each year.\n* Store the total amount after each simulation (stocks + bonds).\n* To determine probability of the fund being at least 35k, count the number of times the fund reached 35k or more and divide by sim size.\n* Don't forget to add the \\$2000 to each of the stocks and bonds at the end of year 5.\n* Easiest implementation is a for loop. \n* Remember to round at the end, as per each question's instructions.\n* You can increase the number of simulated days to be more certain of your answer.\n* To check your work, you could set the interest rate for the stocks to a constant 0.08 and see if you get \\$19,079.84 at the end of the 5th year as demonstrated by this code snippet:\n\n```python\nA = 5000 # initial investment\nr = .08 # annual interest rate\nn = 5 # number of years\nI = 2000 # additional investment at end of year year\nprint(\"end of year, amount\")\nfor i in range(n):\n    A = (1+r)*A + I\n    print(i+1,A)\n```","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"42f9fb","input":"## **Question 16** (Manually Graded) <font color=\"magenta\">(5 points)</font>\n\nWrite a loop to call your function for all the values of pre-order quantities between and including 17 and 28.\n\nStore the values of:\n\n* pre-order quantities\n* the mean, 5th percentile and 95th percentile of the cost.\n\nAfter your loop, print the values in a dataframe and generate a trend chart showing the mean cost versus the pre-purchased pork amount.  Your trend chart should should include trend lines as in the lesson.\n\n*Note: This may take a while to run.*\n\n**Hints:**\n\n* You want to find the best amount to pre-purchase.\n* Use a loop to check x = 17, 18, 19, ... 28.\n* Make a table including x and the other quantities listed above.","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"4fcf78","input":"## **Question 4** <font color=\"magenta\">(2 points)</font>\n\nWhat will be the expected value (mean) of the college fund at the end of year 5, rounded to the nearest 1000 (e.g. 24570 becomes 25000)?\n\n\n## **Question 5** <font color=\"magenta\">(2 points)</font>\nWhat will be the standard deviation of the college fund at the end of year 5, rounded to the nearest 1000?\n\n\n\n## **Question 6** <font color=\"magenta\">(2 points)</font>\nWhat is the probability that the college fund at the end of year 5 will be at least \\$35,000?\n\n* .7\n* .5\n* .3\n* .9\n* .1\n\n## **Question 7** <font color=\"magenta\">(2 points)</font>\nWhat is the probability that the college fund at the end of year 5 will be at least \\$40,000, rounded to two digits?\n\n* .55\n* .09\n* .01\n* .35\n* .77\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"52b418","input":"## **Question 9** <font color=\"magenta\">(2 points)</font>\n\nWhat is the probability that RPI will win the bid, rounded to the nearest single digit? \n\n* .1\n* .3\n* .5\n* .7\n* .9\n\n## **Question 10** <font color=\"magenta\">(2 points)</font>\n\nInto which range would RPI's average profit fall?\n\n* 150,000 - 199,99\n* 200,000 - 229,999\n* 230,000 - 269,999\n* 270,000 - 315,999\n* 316,000 - 329,999\n\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"558504","input":"## **Question 13**  (Manually Graded) <font color=\"magenta\">(4 points)</font>\n\nPerform an automated search to find the bid that maximizes RPI’s mean profit. You should consider bids in the range of 5.3 to 6 million. (Use one of the optimization tools we've studied.)\n","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"6da7f1","input":"## **Question 1** - Textbook Problem 20.1-2 (Manually Graded) <font color=\"magenta\">(5 points)</font>\n\nThe weather can be considered a stochastic system, because it evolves in a probabilistic manner from one day to the next. Suppose for a certain location that this probabilistic series satisfies the following description:\n\nThe probability of rain tomorrow is 0.6 if it is raining today. The probability of its being clear (no rain) tomorrow is 0.8 if it is clear today.\n\nWe've modified the problem a bit from the text book:  use uniformly distributed random numbers to simulate a sequence of 1000 days starting from a clear day.  Your code should output the the approximate probability of a rainy day based on your simulation results.\n\n**Hints:**\n* use a for loop\n* start with a clear day\n* inside the for loop, if today is clear and rand() < .8, then tomorrow is clear, otherwise tomorrow is rainy\n* you'll need to add a similar if statement to predict tomorrow's weather if today is rainy\n* count the number of rainy days/simulation size to estimate the probability of rain\n* round to 2 digits to compare your answer to the answer choices\n* even with a random seed, there could be some variance. Choose the closest answer to what you got.  \n* You can increase the number of simulated days to be more certain of your answer.","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"8865cf","input":"We're going to revisit the Sausage Factory problem from Lessons 1 and 2, but this time, we're going to introduce uncertainty.\n\nIn Lesson 2, we optimized the cost of our sausage making, by altering the ingredients in each sausage type to meet minimum requirements and fulfill a demand of 350 economy sausages and 500 premium sausages a week.\n\nIn reality, our demand fluctuates week to week. \n\nThe basic set up of the problem is the same.\n\nWe're going to make sausages by blending pork, wheat, and starch.  Our objective is to minimize the cost of making the sausages.  The table below shows the ingredients available, the cost, and the amount of each ingredient available from our supplier:\n\nIngredient | Cost ($/kg) | Amount (kg)\n-----------|------|--------------\nPork       | 4.32 | 7 kg\nWheat      | 2.46 | 20.0\nStarch     | 1.86 | 17\n\n\n\nWe want to make 2 types of sausage:\n* Economy ( > 40\\% pork )\n* Premium ( > 60\\% pork )\n\nEach sausage is 50 grams (0.05 kg).  \n\nAccording to government regulations, the most starch we can use in our sausages is 25\\% by weight.","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"99fa13","input":"## Sausage Making - Simulation with Optimization","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"9ae051","input":"Notice that the final cost and the amount of full-price pork purchased have distributions that fairly closely match each other. That's because full-price pork is the most expensive component of our sausages. The more full-price pork we use, the more expensive our product is. We'd like to optimize the amount of full-price pork we use.\n\n## **Question 15** <font color=\"magenta\">(2 points)</font>\n\nWhich range does the average optimized cost fall into, when pre-purchasing 20kgs of pork?\n\n* 80-99\n* 100-125\n* 126-150\n* 151-170\n\n","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"c44185","input":"# Lesson 10 Homework - Simulation\n\n### When asking questions about homework in Piazza please use a tag in the subject line like HW1.3 to refer to Homework 1, Question 3.  So the subject line might be **HW1.3 question**.  Note there are no spaces in \"HW1.3\".  This really helps keep Piazza easily searchable for everyone!\n\nFor full credit, all code in this notebook must be both executed in this notebook and copied to the Canvas quiz where indicated.","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"c5ce7c","input":"## **Question 17** (Manually Graded) <font color=\"magenta\">(2 points)</font>\n\nBased on your dataframe and trend chart, what is the optimal amount of pork to pre-purchase. Why?\n\n","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"ce92b4","input":"## **Question 2** <font color=\"magenta\">(2 points)</font>\n\nWhat is the approximate probability of rain?\n\n* .78\n* .33\n* .59\n* .01\n* .99","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"d0c40f","input":"## **Question 11**  <font color=\"magenta\">(2 points)</font>\n\nGenerate a parameter analysis report to consider eight equally spaced bids between \\$5.3 million and \\$6 million in order to forecast RPI’s mean profit for each bid. Which of these bid ranges maximizes RPI’s mean profit?\n\n**Hints:**\n* Repeat the steps from question 8, with each of the possible bids passed in to your function.\n* Find average profit for each possible bid.\n* For which of the bids is average profit maximized?\n\n\n**Answer Options:**\n* 5.3 or 5.4\n* 5.5 or 5.6\n* 5.7 or 5.8\n* 5.9 or 6.0\n","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"d10d47","input":"## **Question 14** (Manually Graded) <font color=\"magenta\">(4 points)</font>\n\nWrite a function that takes in the amount of discount pork we will pre-purchase as a variable (x). \n\nInside the function, write a 1000 iteration loop that solves the optimization problem with random variables for demand and x as your stand in for the minimum amount of discount pork produced. Track the amount of full-price pork used and the cost of each iteration and return both from your function.  \n\nYou may base your Pyomo model on either the concrete or abstract formulations in Lesson 1 and Lesson 2 presentations, respectively.\n\nAfter you've written your function, demonstrate it using 20 as the amount of discount pork purchased. Plot histograms of the Kilograms of Full-Price Pork purchased and the cost.\n\nSubmit both your code and the two histograms in Canvas.\n\n**Hints:**\n* You need to write the LP in terms of this variable x\n* Put the whole LP inside a function\n* Account for the discount by subtracting 1.22*x from the objective\n* x is like the 23 kg in the original model\n* x + 7 is the max amount of pork you can use\n* Inside the function you have a loop around the LP that repeats the solution 1000 times, each time with diff. random demands.\n* Track the kg of full-priced pork, and the minimized cost.\n* Return the kg of full-priced pork and the minimized cost as numpy arrays.","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"e67492","input":"The price for pre-purchased pork is \\$3.10, for a discount of \\$1.22 per kg. We will be fairly conservative in our estimates of pre-purchase, and we are setting our minimum pork used to our pre-purchased amount, so we will only need to calculate the total discount in our objective, not a penalty for buying full-priced pork at \\$4.32 per kg.  \n\nWhile our demand fluctuates, we know that our demand for economy sausages is between 325 and 375 each week and our demand for premium sausage is between 450 and 550 each week. Demand appears to be uniformly distributed (use `np.random.randint`).\n\n***This is a prescriptive analytics problem!  You are prescribing the amount of pork to buy under contract to minimize future cost in an uncertain future.***","pos":19,"type":"cell"}
{"cell_type":"markdown","id":"edff7d","input":"## **Question 8** - Textbook Problem 20.6-9 (Manually Graded) <font color=\"magenta\">(5 points)</font>\n\nRoad Pavers, Inc. (RPI) is considering bidding on a county road construction project. RPI has estimated that the cost of this particular project would be \\$5 million. In addition, the cost of putting together a bid is estimated to be \\$50,000. The county also will receive four other bids on the project from competitors of RPI. Past experience with these competitors suggests that each competitor’s bid is most likely to be 20 percent over the project cost of \\$5 million, but could be as low as 5 percent over or as much as 40 percent over this cost. Assume a triangular distribution for each of these bids.\n\nSuppose that RPI bids \\$5.7 million on the project. Write a function that takes in RPI's bid and the simulation size and returns an array of profits.\n\nRun your function with a simulation size of 1,000 trials. (You should _call_ your function once. It should simulate profits 1000 times and return an array of profits.\n\n**Hints:**\n\n* RPI's bid is constant, but that constant changes for some of the questions\n* Generate 4 bids from triangular dist (`numpy.random.triangular`) with low = 5 * 1.05, mode = 5 * 1.2, high = 5 * 1.4.\n* Compare RPI's bid to the lowest (min) of the 4 competitor bids.\n* If RPI bid < smallest bid then RPI wins and their profit is RPI bid - (5 + .05).\n* If RPI loses their profit is -.05.\n* Each round of the simulation track their profit, or tracks wins and losses.\n* Compute statistics (mean, 5th percentile, 95th percentile)\n* You can increase the number of simulated days to be more certain of your answer.","pos":7,"type":"cell"}
{"id":0,"time":1683061009970,"type":"user"}
{"last_load":1683060992642,"type":"file"}